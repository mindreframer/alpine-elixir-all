name: ci

on:
  push:
    branches: main

jobs:
  elixir-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        # https://stackoverflow.com/questions/61919141/read-json-file-in-github-actions
        id: set_versions
        run: |
          content=`./bin/render-versions`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo $content
          # end of optional handling for multi line json
          echo "::set-output name=versionsJson::$content"
      -
        name: echo json
        run: |
          echo "${{ fromJson(steps.set_versions) }}"
      -
        name: Build and push Erlang
        if: github.event_name == 'push' && contains(toJson(github.event.commits), 'with-erlang') == true
        uses: docker/build-push-action@v2
        with:
          context: erlang
          file: erlang/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: ${{ fromJson(steps.set_versions.outputs.versionsJson).erlang }}
      -
        name: Build and push Elixir
        if: github.event_name == 'push' && contains(toJson(github.event.commits), 'with-elixir') == true
        uses: docker/build-push-action@v2
        with:
          context: elixir
          file: elixir/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: ${{ fromJson(steps.set_versions.outputs.versionsJson).elixir }}
      -
        name: Build and push Phoenix
        if: github.event_name == 'push' && contains(toJson(github.event.commits), 'with-phoenix') == true
        uses: docker/build-push-action@v2
        with:
          context: phoenix
          file: phoenix/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/386
          push: true
          tags: ${{ fromJson(steps.set_versions.outputs.versionsJson).phoenix }}
